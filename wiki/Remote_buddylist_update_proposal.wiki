#labels Phase-Implementation,Deprecated
Via jtorchat, grab bl.txt from a remote location, and merge with own buddies.


BuddyList.java - Method added (work in progress):

At the first lines in this file you must add this:
{{{
import java.io.InputStreamReader;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.URL;
import java.net.URLConnection;
}}}

In the class BuddyList you must add this:
{{{
	  /*
     *  REMOTE BUDDY LOAD VIA TOR
     * */
    public static void loadBuddiesRemote(String remote_bl_URL) {
            

            /*
             *  RETREIVE REMOTE FILE VIA PROXY TO SCANNER OBJECT
             * */
            Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "Retreiving remote buddies");
            Scanner s = null ;
            try {
                // Create a URL for the desired page
                URL url = new URL(remote_bl_URL);
                URLConnection conn = url.openConnection(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress("127.0.0.1", Config.SOCKS_PORT)));
                    s = new Scanner( new InputStreamReader( conn.getInputStream() ) );
            } catch (IOException e) {
                    Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "ERROR: Cannot remote buddies list - Skipping: "+e);
                    return;
            }
            
            
            /*
             *  PROCESS FILE AND MERGE BUDDY
             * */
            Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "Processing remote buddies");
            Random r = new Random();
            while (s.hasNextLine()) {
                    String l = s.nextLine();
                    // from 0 to 16 is address, 17 onwards is name
                    if (!buds.containsKey(l.substring(0, 16)))
                    {
                        if (l.length() > 16) {
                            Buddy b = new Buddy(l.substring(0, 16), l.substring(17)); //.connect();
                            b.reconnectAt = System.currentTimeMillis() + 15000 + r.nextInt(30000);
                            if (l.toCharArray()[16] == '!')
                            b.overrideName = true;
                            } else
                            {
                             new Buddy(l.substring(0, 16), null).reconnectAt = System.currentTimeMillis() + 15000 + r.nextInt(30000); //.connect();
                            } }
                    }}
}}}

----

Using this function is easy in any function from the code:
{{{
BuddyList.loadBuddiesRemote("http://example.net/bl.txt");
}}}

----

When you will it start automatically with your own site from settings.txt you can add this, too.

Under the following code (in config.java):
{{{
public static int SOCKS_PORT; 
public static int LOCAL_PORT; 
}}}
add this string

{{{
public static String buddylist_update; 
}}}

and under every (in config.java)
{{{
TCPort.profile_name = assign("profile_name", null, prop);
TCPort.profile_text = assign("profile_text", null, prop);
}}}

add this string, too:
{{{
buddylist_update  = assign("sync", null, prop);
}}}

------

Add to TCPort.java
{{{
/* * 
Call For remote buddylist on startup - (after Tor is presumed to have booted)
* */
BuddyList.loadBuddiesRemote(Config.buddylist_update);
}}}

under this
{{{
if (!Config.TESTING && Config.loadTor) // only load portable tor if not testing
TorLoader.loadTor();
// new Gui().init();
runInit("net.tsu.TCPort.Gui.Gui");
launched = true;
try {
BuddyList.loadBuddies();
} catch (FileNotFoundException fnfe) {
fnfe.printStackTrace();
// no buddylist file
}
}}}

Now you can add in the Settings.txt the sync tag.