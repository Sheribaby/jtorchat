Via jtorchat, grab bl.txt from a remote location, and merge with own buddies.

These codes assumes that you remember to 'import' the relevant classes. Eclipse will help with that.

BuddyList.java - Method added (work in progress):


{{{
	/*
	 *  REMOTE BUDDY LOAD VIA TOR
	 * */
	public static void loadBuddiesRemote() {
		
		// Don't load if no url was specified
		if ( remote_bl_URL == null ) {
			Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "No remote buddylist specified. Skipping remote load.");
			Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "Tip: remote_buddylist_url = example.com/bl.txt ; in settings.ini");
			return;
		}
		
		
		/*
		 * SOCKET RETRIEVE REMOTE FILE VIA PROXY TO SCANNER OBJECT
		 * */
		Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "Retreiving remote buddies");
		Socket ourSock = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress("127.0.0.1", Config.SOCKS_PORT)));
		try {
			ourSock.connect(InetSocketAddress.createUnresolved(remote_bl_URL, 80));
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		Scanner s=null;
		try {
			Util.readBytesTillChar(ourSock.getInputStream(), '\n'); //strip away header (first line) // needs "import net.tsu.TCPort.util.Util;"
			s = new Scanner( new InputStreamReader( ourSock.getInputStream()) ) ; //create scanner obj
		} catch (IOException e1) {
			Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "ERROR: Cannot remote buddies list - Skipping: "+e1);
			return;
		}
		
		
		/*
		 *  PROCESS FILE AND MERGE BUDDY
		 * */
		Logger.log(Logger.INFO, "BuddyList loadBuddiesRemote", "Processing remote buddies");
		Random r = new Random();
		while (s.hasNextLine()) {
			String l = s.nextLine();
			// from 0 to 16 is address, 17 onwards is name
			if (buds.containsKey(l.substring(0, 16)))
				try {
					buds.remove(l.substring(0, 16)).disconnect();
				} catch (IOException e) {
					System.err.println("Error disconnecting buddy: " + e.getLocalizedMessage());
				}
			if (l.length() > 16) {
				Buddy b = new Buddy(l.substring(0, 16), l.substring(17)); //.connect();
				b.reconnectAt = System.currentTimeMillis() + 15000 + r.nextInt(30000);
				if (l.toCharArray()[16] == '!')
					b.overrideName = true;
			} else
				new Buddy(l.substring(0, 16), null).reconnectAt = System.currentTimeMillis() + 15000 + r.nextInt(30000); //.connect();
		}
		
	}
}}}

----

BuddyList.java - hold location of remote buddylist file 

located inside BuddyList class

{{{
	public static String remote_bl_URL; // = "example.com/bl.txt";
}}}

under

{{{
	public static HashMap<String, Buddy> buds = new HashMap<String, Buddy>();
}}}

----

Under every (in config.java)
{{{
		TCPort.profile_name = assign("profile_name", null, prop);
		TCPort.profile_text = assign("profile_text", null, prop);
}}}

add this string

{{{

		BuddyList.remote_bl_URL = assign("remote_buddylist_url", null, prop);

}}}

------

Add to TCPort.java

{{{
			/* 
			 * Call For remote buddylist on startup - (after Tor is presumed to have booted)
			 * */
			BuddyList.loadBuddiesRemote();
}}}

under

{{{
			if (!Config.TESTING && Config.loadTor) // only load portable tor if not testing
				TorLoader.loadTor();
			// new Gui().init();
			runInit("net.tsu.TCPort.Gui.Gui");
			launched = true;
			try {
				BuddyList.loadBuddies();
			} catch (FileNotFoundException fnfe) {
				fnfe.printStackTrace();
				// no buddylist file
			}
}}}